name: lpf-ftp

services:
  lpf-db:
    image: postgres:13
    env_file: .env
    ports:
      - "5432:${DB_PORT}"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWD}
    volumes:
      - db-data:/var/lib/postgresql/data
      - initdb:/docker-entrypoint-initdb.d
    networks:
      - lpf-ftpnet
  
  lpf-server:
    build:
      dockerfile: Dockerfile-server
    env_file: .env
    ports:
      - "${SERVER_INTERNAL_PORT}:${SERVER_PORT}"
    environment:
      - PORT=${SERVER_INTERNAL_PORT}
    volumes:
      - server-data:/app
    networks:
      - lpf-ftpnet
    depends_on:
      - lpf-db
      - lpf-prometheus
      - lpf-grafana
      - lpf-node-exporter
      - lpf-elasticsearch
      - lpf-filebeat
      - lpf-kibana
  
  lpf-client:
    build:
      dockerfile: Dockerfile-client
    env_file: .env
    environment:
      - LPF_SERVER_ADDR=${SERVER_ADDR}
      - LPF_SERVER_PORT=${SERVER_PORT}
    volumes:
      - client-data:/app
    networks:
      - lpf-ftpnet
    tty: true
    stdin_open: true
    depends_on:
      - lpf-server
  
  # monitoring
  lpf-prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    networks:
      - lpf-ftpnet
    volumes:
      - ./monitoring/prometheus:/etc/prometheus/
      - ./monitoring/prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    depends_on:
      - lpf-cadvisor
  
  lpf-cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "8080:8080"
    networks:
      - lpf-ftpnet
    volumes:  # resources to watch
      - ./:/rootfs:ro
  
  lpf-node-exporter:
    image: prom/node-exporter:latest
    depends_on:
      - lpf-prometheus
    ports:
      - "9100:9100"
    networks:
      - lpf-ftpnet
  
  lpf-grafana:
    image: grafana/grafana:latest
    depends_on:
      - lpf-prometheus
    ports:
      - "3000:3000"
    networks:
      - lpf-ftpnet

  # elasticsearch
  lpf-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.0
    env_file: .env
    ports:
      - ${ES_PORT}:9200
    environment:
      discovery.type: 'single-node'
      xpack.security.enabled: 'true'
      ELASTIC_USERNAME: '${ELASTIC_USERNAME}'
      ELASTIC_PASSWORD: '${ELASTIC_PASSWORD}'
      # ES_JAVA_OPTS: '-Xmx2g -Xms2g'
  lpf-filebeat:
    image: docker.elastic.co/beats/filebeat:8.17.0
    env_file: .env
    depends_on:
      - lpf-elasticsearch
    entrypoint: "filebeat -e --strict.perms=false"
    volumes:
      - ./elasticsearch/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./server-volume/logs:/app/server/logs:ro
  lpf-kibana:
    image: docker.elastic.co/kibana/kibana:8.17.0
    env_file: .env
    depends_on:
      - lpf-elasticsearch
    volumes:
      - ./elasticsearch/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - ${KIBANA_PORT}:${KIBANA_PORT}
    environment:
      - KIBANA_PORT=${KIBANA_PORT}
      - ES_PORT=${ES_PORT}
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}


networks:
  lpf-ftpnet:


volumes:
  db-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './database/data'
  initdb:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './database/init'
  
  server-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './server-volume'
  
  client-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: './'
